{
  "name": "js-custom-operators",
  "version": "1.1.6",
  "description": "Create your own operators in JavaScript",
  "main": "lib/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/IonicaBizau/js-custom-operators.git"
  },
  "keywords": [
    "custom",
    "operators",
    "js"
  ],
  "author": "Ionică Bizău <bizauionica@gmail.com> (https://ionicabizau.net)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/IonicaBizau/js-custom-operators/issues"
  },
  "homepage": "https://github.com/IonicaBizau/js-custom-operators#readme",
  "blah": {
    "ex_img": "http://i.imgur.com/15IaZnT.png",
    "description": [
      {
        "h2": "Introduction"
      },
      {
        "p": "During the Math classes we learned how to define new operators. For example:"
      },
      {
        "h4": "`(ℝ, ∘), x ∘ y = x + 2y`"
      },
      {
        "p": "This defines `∘` law. For any real numbers *x* and *y*, *x ∘ y* is *x + 2y*. e.g: `2 ∘ 2 = 2 + 4 = 6`."
      },
      {
        "h2": "Custom operators in JavaScript?"
      },
      {
        "p": "This projects finally bring this feature in the JavaScript world! :-) Using [**esprima**](http://esprima.org/) - which takes JS code and generates the syntax tree for it - and [**escodegen**](https://github.com/Constellation/escodegen) - which does the other direction, generating JS code from the syntax tree esprima spits - we can create new JavaScript operators."
      },
      {
        "h2": "Example"
      },
      {
        "p": "Having two arrays:"
      },
      {
        "code": {
          "language": "js",
          "content": [
            "var x = [1, 2, 3, 4, 5]",
            "  , y = [3, 5, 6, 1]",
            "  ;"
          ]
        }
      },
      {
        "p": [
          "we want to find the intersection of them (that is `[1, 3, 5]`).",
          "We can easily create a function `function foo (x, y) { ... }`, but why not create an operator instead?",
          "Then `x ⋂ y` will return the same thing. :-)"
        ]
      },
      {
        "h2": "Live demo"
      },
      {
        "p": "You can try this application online [clicking here](http://ionicabizau.github.io/JavaScript-custom-operators/)."
      }
    ],
    "thanks": {
      "ul": [
        "[@benjamingr](https://github.com/benjamingr) posted this great [answer](http://stackoverflow.com/a/20764137/1420197) to my [question on StackOverflow](http://stackoverflow.com/q/20762338/1420197)",
        "[**esprima**](http://esprima.org/)",
        "[**escodegen**](https://github.com/Constellation/escodegen)"
      ]
    }
  },
  "files": [
    "bin/",
    "app/",
    "lib/",
    "dist/",
    "src/",
    "scripts/",
    "resources/",
    "menu/",
    "cli.js",
    "index.js"
  ]
}